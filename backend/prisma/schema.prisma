// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String 
  password String
  bio String?
  posts Post[]
  comments Comment[]
  followedBy User[]  @relation("UserFollows")
  following  User[]  @relation("UserFollows")
  reactions Reaction[]
}
model Post{
  id String @id @default(uuid())
  title String
  content String
  published Boolean @default(false)
  author User @relation(fields: [authorId],references: [id])
  authorId String
  publishedDate DateTime @default(now())
  blogJson Json
  comments Comment[]
  reactions Reaction[]
  tags Tag[]
}

model Comment{
  id String @id @default(uuid())
  comment String
  commentor User @relation(fields: [commentorId], references: [id])
  commentorId String 
  post Post @relation(fields: [postId], references: [id])
  postId String 
  commentedAt DateTime @default(now())
}

model Reaction{
  id Int @id @default(autoincrement())
  likeDislike LikeDislike @default(NONE)
  reaction React @default(NONE)
  post Post @relation(fields: [postId],references: [id])
  postId String 
  user User @relation(fields: [userId],references: [id])
  userId String 
  @@unique([postId,userId])
}

model Tag{
  id Int @id @default(autoincrement())
  title String
  post Post @relation(fields: [postId],references: [id])
  postId String
}


enum LikeDislike {
   NONE
   LIKE
   DISLIKE
}

enum React{
  NONE
  SMILE
  INSIGHTFULL
  HEART
  IDEA
}